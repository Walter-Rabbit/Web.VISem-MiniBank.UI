// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id              Int       @id @default(autoincrement())
  name            String
  email           String    @unique
  birthDate       DateTime
  encodedPassword String
  accounts        Account[]
  credits         Credit[]
  deposits        Deposit[]
}

model Admin {
  id              Int    @id @default(autoincrement())
  name            String
  email           String
  encodedPassword String
}

model Transaction {
  id                Int      @id @default(autoincrement())
  amount            Float
  date              DateTime
  senderAccount     Account  @relation(fields: [senderAccountId], references: [id])
  senderCredit      Credit   @relation(fields: [senderCreditId], references: [id])
  senderDeposit     Deposit  @relation(fields: [senderDepositId], references: [id])
  senderAccountId   Int
  senderCreditId    Int
  senderDepositId   Int
  receiverProduct   Int
}

model AccountDescription {
  id           Int       @id @default(autoincrement())
  name         String    @unique
  description  String
  duration     DateTime
  limit        Float
  monthPercent Float
  price        Float
  accounts     Account[]
}

model CreditDescription {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String
  duration    DateTime
  amount      Float
  percent     Float
  credits     Credit[]
}

model DepositDescription {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  duration    DateTime
  limit       Float
  yearPercent Float
  deposits    Deposit[]
}

model Account {
  id             Int                @id @default(autoincrement())
  description    AccountDescription @relation(fields: [descriptionId], references: [id])
  descriptionId  Int
  owner          Client             @relation(fields: [ownerId], references: [id])
  ownerId        Int
  amount         Float
  isActive       Boolean
  serviceEndDate DateTime
  transactions   Transaction[]
}

model Credit {
  id             Int               @id @default(autoincrement())
  description    CreditDescription @relation(fields: [descriptionId], references: [id])
  descriptionId  Int
  owner          Client            @relation(fields: [ownerId], references: [id])
  ownerId        Int
  amount         Float
  moneyLeftToPay Float
  serviceEndDate DateTime
  transactions   Transaction[]
}

model Deposit {
  id             Int                @id @default(autoincrement())
  description    DepositDescription @relation(fields: [descriptionId], references: [id])
  descriptionId  Int
  owner          Client             @relation(fields: [ownerId], references: [id])
  ownerId        Int
  amount         Float
  moneyPaid      Float
  serviceEndDate DateTime
  transactions   Transaction[]
}
